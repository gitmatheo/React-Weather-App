{"version":3,"sources":["img/bg.jpg","components/Form.js","components/Results.js","components/HeroImage.js","components/Loader.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MyForm","styled","form","_templateObject","Button","button","_templateObject2","Input","input","_templateObject3","Form","props","react_default","a","createElement","onSubmit","submit","className","type","value","placeholder","onChange","change","Results","div","Results_templateObject","StyledI","_ref","concat","Results_templateObject2","Cart","Results_templateObject3","ResultsContainer","_templateObject4","Result","_props$weather","weather","error","city","sunrise","sunset","temp","pressure","wind","date","content","results","icon","desc","response","Date","toLocaleTimeString","map","element","HeroImg","HeroImage_templateObject","img","HeroImage","ldsRipple","keyframes","Loader_templateObject","LoaderOutside","Loader_templateObject2","LoaderInside","Loader_templateObject3","Loader","MyFooter","Footer_templateObject","Footer","class","href","APIKey","GlobalStyle","createGlobalStyle","App_templateObject","whiteColor","Header","h1","App_templateObject2","WeatherApp","App_templateObject3","App","state","isLoading","appearResults","handleInputChange","e","_this","setState","target","handleCitySubmit","preventDefault","API","fetch","then","ok","Error","json","data","time","toLocaleString","prevState","sys","main","speed","catch","Fragment","components_HeroImage","components_Form","this","afterLoading","components_Loader","react_transition_group","in","appear","timeout","classNames","components_Results","src_components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe745774.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.76903e4b.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MyForm = styled.form`\r\n  width: 55%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  & * {\r\n    font-size: 2em;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  border: 1px solid white;\r\n  border-radius: 3px;\r\n  color: white;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n  width: 50%;\r\n  outline: none;\r\n  transition: 0.3s;\r\n  &:hover {\r\n    color: white;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  border-bottom: 2px solid rgba(255, 255, 255, 0.8);\r\n  background: transparent;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  text-align: center;\r\n  width: 50%;\r\n  padding: 10px;\r\n  outline: none;\r\n  transition: 0.3s;\r\n  &::placeholder {\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n  &:focus {\r\n    box-shadow: 0 10px 20px -8px rgba(255, 255, 255, 0.8);\r\n  }\r\n`;\r\nconst Form = props => {\r\n  return (\r\n    <MyForm onSubmit={props.submit} className={props.className}>\r\n      <Input\r\n        type=\"text\"\r\n        value={props.value}\r\n        placeholder=\"Type your city\"\r\n        onChange={props.change}\r\n      />\r\n      <Button>Check the weather</Button>\r\n    </MyForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"../icons/css/weather-icons.min.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Results = styled.div`\r\n  font-size: 2em;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-top: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst I = ({ className }) => <i className={`${className}`} />;\r\nconst StyledI = styled(I)`\r\n  font-size: 2em;\r\n  margin: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Cart = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  width: 33.333%;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  &:hover {\r\n    color: white;\r\n  }\r\n  @media (max-width: 480px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst ResultsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n  flex-wrap: wrap;\r\n  width: 80%;\r\n  height: 40vh;\r\n  margin: 50px auto;\r\n  transition: 0.3s;\r\n`;\r\n\r\nconst Result = props => {\r\n  const {\r\n    error,\r\n    city,\r\n    sunrise,\r\n    sunset,\r\n    temp,\r\n    pressure,\r\n    wind,\r\n    date\r\n  } = props.weather;\r\n\r\n  let content = null;\r\n\r\n  if (!error && city) {\r\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n    let results = [\r\n      {\r\n        icon: \"wi wi-time-5\",\r\n        desc: \"Date and time: \",\r\n        response: date\r\n      },\r\n      {\r\n        icon: \"wi wi-thermometer\",\r\n        desc: \"Temperature: \",\r\n        response: temp\r\n      },\r\n      {\r\n        icon: \"wi wi-barometer\",\r\n        desc: \"Pressure: \",\r\n        response: pressure\r\n      },\r\n      {\r\n        icon: \"wi wi-sunrise\",\r\n        desc: \"Sunrise: \",\r\n        response: sunriseTime\r\n      },\r\n      {\r\n        icon: \"wi wi-horizon\",\r\n        desc: \"Sunset: \",\r\n        response: sunsetTime\r\n      },\r\n      {\r\n        icon: \"wi wi-strong-wind\",\r\n        desc: \"Wind speed: \",\r\n        response: wind\r\n      }\r\n    ];\r\n\r\n    content = (\r\n      <div>\r\n        <h3>\r\n          Actual weather in <strong>{city}</strong>\r\n        </h3>\r\n\r\n        <ResultsContainer>\r\n          {results.map(element => (\r\n            <Cart>\r\n              <StyledI className={element.icon} />\r\n              <p>{element.desc}</p>\r\n              <p>{element.response}</p>\r\n            </Cart>\r\n          ))}\r\n        </ResultsContainer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Results>\r\n      {error ? `There is no \"${city}\" in our database` : content}\r\n    </Results>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport img from \"../img/bg.jpg\";\r\n\r\nconst HeroImg = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: -1;\r\n  background-image: url(${img});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.4);\r\n  }\r\n`;\r\nconst HeroImage = () => {\r\n  return <HeroImg />;\r\n};\r\n\r\nexport default HeroImage;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst ldsRipple = keyframes`\r\n0% {\r\n  top: 28px;\r\n  left: 28px;\r\n  width: 0;\r\n  height: 0;\r\n  opacity: 1;\r\n}\r\n100% {\r\n  top: -1px;\r\n  left: -1px;\r\n  width: 58px;\r\n  height: 58px;\r\n  opacity: 0;\r\n}\r\n`;\r\nconst LoaderOutside = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 64px;\r\n  height: 64px;\r\n`;\r\n\r\nconst LoaderInside = styled.div`\r\n  position: absolute;\r\n  border: 4px solid #fff;\r\n  opacity: 1;\r\n  border-radius: 50%;\r\n  animation: ${ldsRipple} 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\r\n  &:nth-child(2) {\r\n    animation-delay: -0.5s;\r\n  }\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <LoaderOutside>\r\n      <LoaderInside />\r\n      <LoaderInside />\r\n    </LoaderOutside>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n// import logo from \"../svg/logo.svg\";\r\nimport \"./Footer.css\";\r\n\r\nconst MyFooter = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 50px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n`;\r\n\r\n// const Logo = ({ src }) => <img src={`${logo}`} alt=\"logo\" />;\r\n\r\n// const MyLogo = styled(Logo)`\r\n//   width: 100%;\r\n// `;\r\n\r\n// const LogoWrapper = styled.div`\r\n//   width: 10%;\r\n//   padding-left: 3%;\r\n// `;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MyFooter>\r\n      <h2>\r\n        Created with\r\n        <i class=\"fas fa-heart\" />\r\n        by Mateusz Dominiak\r\n        <a href=\"https://github.com/gitmatheo\">\r\n          <i class=\"fab fa-github\" />\r\n        </a>\r\n      </h2>\r\n      {/* <LogoWrapper>\r\n        <MyLogo />\r\n      </LogoWrapper> */}\r\n    </MyFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Results from \"./Results\";\nimport HeroImage from \"./HeroImage\";\nimport Loader from \"./Loader\";\nimport Footer from \"./Footer\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./App.css\";\n\n//API KEY\nconst APIKey = `098f9bf6c16084074659b3cfd6958052`;\n\n//Global Styles for styled components\nconst GlobalStyle = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n  body {\n    color: ${props => (props.whiteColor ? \"white\" : \"black\")};\n    font-family: 'Montserrat', sans-serif;\n    font-size: 12px;\n  }\n  @media (max-width: 768px) {\n  body {\n    font-size: 9px;\n  }\n}\n\n@media (max-width: 480px) {\n  body {\n    font-size: 7.5px;\n  }\n}\n`;\n\nconst Header = styled.h1`\n  font-size: 3.5em;\n  color: rgba(255, 255, 255, 0.8);\n`;\n\nconst WeatherApp = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;\n\n//APP\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    date: \"\",\n    city: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    temp: \"\",\n    pressure: \"\",\n    wind: \"\",\n    error: \"\",\n    isLoading: false,\n    appearResults: false\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  handleCitySubmit = e => {\n    e.preventDefault();\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${\n      this.state.value\n    }&APPID=${APIKey}&units=metric`;\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"Nie udało się\");\n      })\n      .then(\n        response => response.json(),\n        this.setState({\n          isLoading: true\n        })\n      )\n      .then(data => {\n        const time = new Date().toLocaleString();\n\n        this.setState(prevState => ({\n          error: false,\n          date: time,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          city: prevState.value,\n          isLoading: false,\n          appearResults: true,\n          value: \"\"\n        }));\n      })\n      .catch(error => {\n        this.setState(prevState => ({\n          error: true,\n          isLoading: false,\n          city: prevState.value\n        }));\n      });\n  };\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <HeroImage />\n        <WeatherApp className=\"App\">\n          <Header>Simple React Weather App</Header>\n          <Form\n            value={this.state.value}\n            change={this.handleInputChange}\n            submit={this.handleCitySubmit}\n            className={this.state.afterLoading ? \"active\" : null}\n          />\n          {this.state.isLoading ? (\n            <Loader />\n          ) : (\n            <CSSTransition\n              in={this.state.appearResults}\n              appear={true}\n              timeout={1000}\n              classNames=\"fade\"\n            >\n              <Results weather={this.state} />\n            </CSSTransition>\n          )}\n          <Footer />\n        </WeatherApp>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}